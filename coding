import streamlit as st
import pickle
import pandas as pd
import requests


def fetch_poster(movie_id):
    response =  requests.get('https://api.themoviedb.org/3/movie/{}?api_key=cb3b3fc9fccfb832ddd1840a70a11dda&&langauge=en-US'.format(movie_id))
    data = response.json()
    return "https://image.tmdb.org/t/p/w500/"+ data['poster_path']

def recommend(movie):
    movie_index = movies[movies['title'] == movie].index[0]
    distances = similarity_1[movie_index]
    movies_list = sorted(list(enumerate(distances)), reverse=True, key=lambda x: x[1])

    # Get the top 5 recommendations (excluding the selected movie itself)
    recommended_movies = []
    recommended_movies_posters = []

    for i in movies_list[1:6]:  # Skip the first movie (itself)
        recommended_movies.append(movies.iloc[i[0]].title)  # Append the movie title
        movie_id = movies.iloc[i[0]].movie_id  # Ensure your DataFrame has 'movie_id'
        recommended_movies_posters.append(fetch_poster(movie_id))  # Fetch the poster

    return recommended_movies, recommended_movies_posters



movie_dict = pickle.load(open('movie_dict.pkl','rb'))
movies = pd.DataFrame(movie_dict)

similarity_1 = pickle.load(open('similarity_1.pkl','rb'))

st.title('Movie Recommender System')

selected_movie_name = st.selectbox(
'how would you like to be contacted?',
movies['title'].values)

if st.button('Recommend'):
    names,posters =  recommend(selected_movie_name)


    col1, col2, col3 ,col4, col5 = st.columns(5)
    with col1:
        st.text(names[0])
        st.image(posters[0])
    with col2:
        st.text(names[1])
        st.image(posters[1])
    with col3:
        st.text(names[2])
        st.image(posters[2])
    with col4:
        st.text(names[3])
        st.image(posters[3])
    with col5:
        st.text(names[4])
        st.image(posters[4])
